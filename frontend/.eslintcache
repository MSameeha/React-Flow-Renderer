[{"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\index.js":"1","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\Routes.js":"2","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Signup.js":"3","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Signin.js":"4","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Displayflow.js":"5","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\core\\Home.js":"6","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\core\\Notfound.js":"7","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\auth\\PrivateRoute.js":"8","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\apiHelper.js":"9","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\auth\\index.js":"10","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\core\\Menu.js":"11","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Showflow.js":"12","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\react-flow-renderer\\Nodes.jsx":"13","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\config.js":"14","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\react-flow-renderer\\index.jsx":"15","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\react-flow-renderer\\apiUser.js":"16"},{"size":227,"mtime":1644760452489,"results":"17","hashOfConfig":"18"},{"size":1233,"mtime":1644839595525,"results":"19","hashOfConfig":"18"},{"size":4705,"mtime":1644839595541,"results":"20","hashOfConfig":"18"},{"size":3868,"mtime":1644839595541,"results":"21","hashOfConfig":"18"},{"size":14169,"mtime":1644925759594,"results":"22","hashOfConfig":"18"},{"size":3259,"mtime":1644839595525,"results":"23","hashOfConfig":"18"},{"size":539,"mtime":1644839595541,"results":"24","hashOfConfig":"18"},{"size":610,"mtime":1644839595525,"results":"25","hashOfConfig":"18"},{"size":1410,"mtime":1644760452504,"results":"26","hashOfConfig":"18"},{"size":1935,"mtime":1644760452489,"results":"27","hashOfConfig":"18"},{"size":2359,"mtime":1644839595525,"results":"28","hashOfConfig":"18"},{"size":1746,"mtime":1644839595541,"results":"29","hashOfConfig":"18"},{"size":2792,"mtime":1644760452499,"results":"30","hashOfConfig":"18"},{"size":49,"mtime":1644760452489,"results":"31","hashOfConfig":"18"},{"size":8623,"mtime":1644839595541,"results":"32","hashOfConfig":"18"},{"size":457,"mtime":1644760452499,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1of9pyf",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\index.js",[],["72","73"],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\Routes.js",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Signup.js",["74"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signup, authenticate } from '../auth';\r\nimport classes from './Signup.module.css'\r\nimport Menu from '../core/Menu';\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n    const [retype, setRetype] = useState('')\r\n\r\n    const { name, email, password, loading, error, redirectToReferrer } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const handlePassword = name => event => {\r\n        if (password === event.target.value) {\r\n            setValues({ ...values, error: false });\r\n            setRetype(event.target.value)\r\n        }\r\n        else {\r\n            setValues({ ...values, error: 'Passwords dont match' });\r\n            setRetype(event.target.value)\r\n        }\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        if (!error) {\r\n            setValues({ ...values, error: false, loading: true });\r\n            signup({ name, email, password }).then(data => {\r\n                //console.log(data)\r\n                if (data.error) {\r\n                    //console.log(data.error)\r\n                    if (typeof data.error.message !== 'undefined')\r\n                        setValues({ ...values, error: data.error.message, loading: false })\r\n                    else\r\n                        setValues({ ...values, error: 'Validation failed', success: false });\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToReferrer: true,\r\n\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }} >Retype Password</label>\r\n                <input onChange={handlePassword()} type=\"password\" className=\"form-control\" value={retype} style={{ marginBottom: '15px' }} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className={classes.btn}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && <div className=\"alert alert-info\" >\r\n            Loading...\r\n        </div>\r\n    );\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n    }\r\n    return (<div><Menu>  </Menu>\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgba(5, 0, 255, 0.4)',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        }}>\r\n\r\n            <img style={{\r\n                marginTop: '10%', marginLeft: '15%', marginRight: '12%', borderRadius: '290px'\r\n            }} height=\"200px\" src=\"https://eligeeducar.cl/content/uploads/2021/10/un-astronauto-viendo-un-documental.jpg\"></img>\r\n\r\n            < div className={classes.rform} >\r\n                <div style={{ color: '#131D5A', paddingBottom: '20px' }}>            <h1 >Register!</h1>\r\n                </div>\r\n\r\n                {showLoading()}\r\n                {showError()}\r\n                {signUpForm()}\r\n            </div>\r\n            {redirectUser()}\r\n        </div >\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Signin.js",["75"],"import { isAuthenticated } from \"../auth\";\r\nimport { useState } from \"react\";\r\nimport { authenticate } from \"../auth\";\r\nimport { signin } from \"../auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Menu from '../core/Menu'\r\nimport classes from './Signup.module.css'\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: 'test@gmail.com',\r\n        password: '$Test123',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n    const { email, password, error, loading, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated()\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    // console.log(data.error.message)\r\n                    if (typeof data.error.message !== 'undefined')\r\n                        setValues({ ...values, error: data.error.message, loading: false })\r\n                    else\r\n                        setValues({ ...values, error: 'Validation failed', success: false });\r\n                } else {\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            redirectToReferrer: true\r\n                        });\r\n                    })\r\n                }\r\n            });\r\n    };\r\n    const signInForm = () => (\r\n        <form>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }}>Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label style={{ fontWeight: 'bold', color: '#131D5A' }}>Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={clickSubmit} className={classes.btn}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () => (\r\n        loading && (<div className=\"alert alert-info\">\r\n            <h2>Loading...</h2>\r\n        </div>)\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            //console.log(user & user.role===1)\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/\" />;\r\n            } else {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div ><Menu>  </Menu>\r\n        <div style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgba(5, 0, 255, 0.4)',\r\n            display: 'flex',\r\n            flexWrap: 'wrap'\r\n        }}>\r\n            <img style={{\r\n                marginTop: '10%', marginLeft: '15%', marginRight: '12%', borderRadius: '290px'\r\n            }} height=\"200px\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ7Mvq2MGMEzWXPTUfqbqgtlUazwyoOYpB7lA&usqp=CAU\"></img>\r\n\r\n            <div className={classes.rform}>\r\n                {showLoading()}\r\n                {showError()}\r\n                <div style={{ color: '#131D5A', paddingBottom: '20px' }}>            <h1 >Signin !</h1>\r\n                </div>\r\n                {signInForm()}\r\n                {redirectUser()}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Signin;","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Displayflow.js",["76","77","78","79","80","81","82","83","84"],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\core\\Home.js",["85","86"],"import { isAuthenticated } from '../auth'\r\nimport { getCategories,getFlows} from \"../user/apiHelper\";\r\nimport { useEffect,useState } from \"react\";\r\nimport ReactFlowRenderer from '../react-flow-renderer';\r\nimport Showflow from '../user/Showflow'\r\nimport Menu from \"./Menu\";\r\nimport { Redirect } from 'react-router-dom';\r\nconst Home = () => {\r\n    const [categories, setCategories] = useState(false)\r\n    const [flowcharts, setFlowcharts] = useState(false)\r\n    const [currentFlowChart, setCurrentFlowChart] = useState([])\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(\"error occured\")\r\n            } else {\r\n                \r\n                let mySet1 = new Set()\r\n                data.map((d, i) => {\r\n                    // console.log(d.category)\r\n                    mySet1.add(d.category)\r\n                })\r\n                const array = [...mySet1];\r\n                setCategories(array)\r\n            }\r\n        })\r\n\r\n        getFlows().then(data => {\r\n            if (data.error) {\r\n                console.log(\"error occured\")\r\n            } else {\r\n                setFlowcharts(data)\r\n            }\r\n        })\r\n    };\r\n    const handleClick = (e) => {\r\n        setCurrentFlowChart([])\r\n        // console.log(e.target.value)\r\n        let x = []\r\n        flowcharts.map((fc, i) => {\r\n            // console.log(fc.category === e.target.value)\r\n            if(fc.category === e.target.value){\r\n                x.push(fc)\r\n            }\r\n        })\r\n        setCurrentFlowChart(x)\r\n        // console.log(currentFlowChart)\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n    return (\r\n        <div>\r\n        <Menu></Menu>\r\n        <div>\r\n            \r\n            <div >\r\n                {\r\n                    !isAuthenticated() && <Redirect to=\"/signin\"></Redirect>\r\n                }\r\n            {   isAuthenticated() && isAuthenticated().user.role === 0 &&\r\n                    categories && categories.map((fc, i) => {\r\n                        return (<div key={i}>\r\n                            <button key={i} value={fc} onClick={(e) => handleClick(e)} >\r\n                                {fc}\r\n                            </button>\r\n                            <br></br>\r\n                            <br></br>\r\n        \r\n                        </div>)\r\n                    })\r\n            }\r\n            </div>\r\n            {/* <Dashboard flow={currentFlowChart}></Dashboard> */}\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 &&\r\n                // < Layout\r\n                //     title=\"Add a flowchart\"\r\n                //     description=\"\"\r\n                //     className=\"container col-md-8 offset-md-2\"\r\n                // >\r\n                    <ReactFlowRenderer />\r\n\r\n                // </Layout >\r\n\r\n\r\n            }\r\n              {isAuthenticated() && isAuthenticated().user.role === 0 && \r\n                <div> \r\n                    {/* {JSON.stringify(props.flow)} */}\r\n                    <Showflow flow={currentFlowChart}></Showflow>\r\n                    {/* <Home></Home> */}\r\n                \r\n                 </div>\r\n              }\r\n        </div>\r\n            </div>\r\n    )\r\n}\r\nexport default Home;","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\core\\Notfound.js",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\apiHelper.js",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\auth\\index.js",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\core\\Menu.js",["87"],"import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { isAuthenticated, signout } from \"../auth\";\r\nimport classes from './Menu.module.css'\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { backgroundColor: '#131D5A', borderRadius: '30px', color: 'white' }\r\n    }\r\n    else {\r\n        return { color: 'black', fontWeight: 'bolder' }\r\n    }\r\n}\r\n\r\nconst Menu = (props) => {\r\n    return (<div>\r\n        <ul className={`nav nav-tabs justify-content-start ${classes.nav}`} style={{ float: 'left', width: '50%', margin: 0, padding: 0 }}>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\"><img height=\"60px\" src=\"https://www.logomaker.com/api/main/images/1j+ojFVDOMkX9Wytexe43D6khvGCpB5Lmh3NwXs1M3EMoAJtliQpgfRu9...8y\"></img></Link>\r\n            </li>\r\n            {/* {isAuthenticated() &&\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(props.history, '/dashboard')} to=\"/dashboard\">Dashboard</Link>\r\n                </li>\r\n            } */}\r\n\r\n\r\n\r\n\r\n        </ul>\r\n        <ul className={`nav nav-tabs justify-content-end ${classes.nav}`} style={{ float: 'right', width: '50%', margin: '0', padding: '20px', paddingRight: '50px' }}>\r\n            {!isAuthenticated() &&\r\n                <React.Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(props.history, '/signin')} to=\"/signin\">Signin</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={isActive(props.history, '/signup')} to=\"/signup\">Signup</Link>\r\n                    </li>\r\n                </React.Fragment>\r\n            }\r\n            {isAuthenticated() &&\r\n                <li className=\"nav-item \" >\r\n                    <span className={`nav-link ${classes.signout}`} style={{ cursor: 'pointer', fontWeight: 'bolder' }} onClick={\r\n                        () =>\r\n                            signout(() => {\r\n                                props.history.push(\"/\")\r\n                            })\r\n                    }>Signout</span>\r\n                </li>\r\n            }\r\n\r\n\r\n\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Menu);","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\user\\Showflow.js",["88"],"//user side show flow charts of certain category\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getFlows, getFlow } from \"./apiHelper\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst Showflow = (props) => {\r\n    const [flowcharts, setFlowcharts] = useState(false)\r\n    const [currentFlowChart, setCurrentFlowChart] = useState(false)\r\n    const init = () => {\r\n        getFlows().then(data => {\r\n            if (data.error) {\r\n                console.log(\"error occured\")\r\n            } else {\r\n                setFlowcharts(data)\r\n            }\r\n        })\r\n    };\r\n    useEffect(() => {\r\n        init();\r\n\r\n    }, []);\r\n    const handleClick = (e) => {\r\n\r\n        getFlow(e.target.value).then(data => {\r\n            if (data.error) {\r\n                console.log(\"error occured\")\r\n            } else {\r\n                setCurrentFlowChart(data)\r\n                console.log(currentFlowChart)\r\n                props.history.push(`/display/${data._id}`)\r\n            }\r\n            //  console.log(e.target.value)\r\n            //console.log(\"clicked \")\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n            Showing flowcharts\r\n            {/* {JSON.stringify(flowcharts)} */}\r\n            {props.flow && props.flow.map((fc, i) => {\r\n                return (<div key={i}>\r\n\r\n                    <button key={i} value={fc._id} onClick={(e) => handleClick(e)}>\r\n                        {fc.name}\r\n\r\n                    </button>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                </div>)\r\n            })}\r\n            {/* {currentFlowChart && JSON.stringify(currentFlowChart)} */}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Showflow)","C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\react-flow-renderer\\Nodes.jsx",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\config.js",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\react-flow-renderer\\index.jsx",[],"C:\\Users\\Sameeha Mubeen\\Desktop\\College\\Codeathon\\Flowtion\\frontend\\src\\react-flow-renderer\\apiUser.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":113,"column":13,"nodeType":"95","endLine":115,"endColumn":123},{"ruleId":"93","severity":1,"message":"94","line":91,"column":13,"nodeType":"95","endLine":93,"endColumn":137},{"ruleId":"96","severity":1,"message":"97","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":10,"column":5,"nodeType":"98","messageId":"99","endLine":10,"endColumn":19},{"ruleId":"96","severity":1,"message":"101","line":20,"column":8,"nodeType":"98","messageId":"99","endLine":20,"endColumn":15},{"ruleId":"96","severity":1,"message":"102","line":27,"column":24,"nodeType":"98","messageId":"99","endLine":27,"endColumn":37},{"ruleId":"96","severity":1,"message":"103","line":29,"column":12,"nodeType":"98","messageId":"99","endLine":29,"endColumn":19},{"ruleId":"96","severity":1,"message":"104","line":30,"column":12,"nodeType":"98","messageId":"99","endLine":30,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":45,"column":8,"nodeType":"107","endLine":45,"endColumn":20,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":61,"column":29,"nodeType":"111","messageId":"112","endLine":61,"endColumn":31},{"ruleId":"109","severity":1,"message":"113","line":160,"column":19,"nodeType":"111","messageId":"112","endLine":160,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":19,"column":33,"nodeType":"116","messageId":"117","endLine":19,"endColumn":35},{"ruleId":"114","severity":1,"message":"115","line":40,"column":32,"nodeType":"116","messageId":"117","endLine":40,"endColumn":34},{"ruleId":"93","severity":1,"message":"94","line":18,"column":51,"nodeType":"95","endLine":18,"endColumn":181},{"ruleId":"96","severity":1,"message":"118","line":7,"column":12,"nodeType":"98","messageId":"99","endLine":7,"endColumn":22},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'removeElements' is defined but never used.","'classes' is defined but never used.","'setActiveNode' is assigned a value but never used.","'newName' is assigned a value but never used.","'instance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.elements', 'props.match.params.id', and 'showCurrentFlow'. Either include them or remove the dependency array.","ArrayExpression",["121"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'flowcharts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [activeNode, props.elements, props.match.params.id, showCurrentFlow]",{"range":"124","text":"125"},[1545,1557],"[activeNode, props.elements, props.match.params.id, showCurrentFlow]"]